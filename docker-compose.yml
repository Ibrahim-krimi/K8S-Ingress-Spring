version : '3.8'

services:
  order-service:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - microservices-network
  product-service:
    build:
      context: ./ProductService
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - microservices-network
  user-service:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - microservices-network
############################################### la partie angular

  angular-app:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - microservices-network
    environment:
      - USER_SERVICE_URL=http://user-service:8080
      - PRODUCT_SERVICE_URL=http://product-service:8081
      - ORDER_SERVICE_URL=http://order-service:8082


networks:
  microservices-network:
    driver: bridge

#Bridge est utilisé pour la communication entre conteneurs sur une seule machine, souvent dans des configurations de développement ou de test.
#Host donne un accès direct au réseau de l’hôte, utile pour des applications nécessitant des performances réseau maximales.
#Overlay permet la communication entre conteneurs sur plusieurs machines, ce qui est idéal pour des clusters.
#macvlan est idéal pour des cas où chaque conteneur doit être visible sur le réseau local de l'hôte avec sa propre adresse IP.